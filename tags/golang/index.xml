<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Golang on 修行中</title>
    <link>https://panxl6.github.io/tags/golang/</link>
    <description>Recent content in Golang on 修行中</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 29 Mar 2020 20:55:30 +0800</lastBuildDate>
    
	<atom:link href="https://panxl6.github.io/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>《Go语言并发之道》读书笔记</title>
      <link>https://panxl6.github.io/post/go%E8%AF%AD%E8%A8%80%E5%B9%B6%E5%8F%91%E4%B9%8B%E9%81%93%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Sun, 29 Mar 2020 20:55:30 +0800</pubDate>
      
      <guid>https://panxl6.github.io/post/go%E8%AF%AD%E8%A8%80%E5%B9%B6%E5%8F%91%E4%B9%8B%E9%81%93%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</guid>
      <description>Go语言提供了一个简单、廉价的并发能力。这种并发的能力好不好用？该如何用？ 一个channel怎么用？ 多个channel怎么组合？有哪几种模式</description>
    </item>
    
    <item>
      <title>Go语言RESTful API开发实战</title>
      <link>https://panxl6.github.io/post/golang-restful-api/</link>
      <pubDate>Sat, 16 Dec 2017 20:20:34 +0800</pubDate>
      
      <guid>https://panxl6.github.io/post/golang-restful-api/</guid>
      <description>&lt;p&gt;如今微服务、无服务器架构大行其道。而API开发是这些话题的主角。 Go语言开发效率要比Java Spring要快一些，性能上比PHP高出一个数量级。尤其是Go语言在并发方便非常的优秀，是2017年值得关注的一门语言。 本文通过一个经典的Todo应用来介绍使用Go语言开发API。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>